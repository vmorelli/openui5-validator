"use strict";module.exports=function e(a){if(!(a&&a.length))return;for(var s=0;s<a.length;s++){var r=a[s];var t;switch(r.keyword){case"$ref":t="kann die Referenz "+r.params.ref+" nicht auflösen";break;case"additionalItems":t="";var i=r.params.limit;t+="sollte nicht mehr als "+i+" Element";if(i!=1){t+="e"}t+=" enthalten";break;case"additionalProperties":t="sollte keine zusätzlichen Attribute haben";break;case"anyOf":t='sollte einem der Schemata in "anyOf" entsprechen';break;case"const":t="sollte der Konstante entsprechen";break;case"contains":t="sollte ein valides Element enthalten";break;case"custom":t='sollte die Validierung "'+r.keyword+'" bestehen';break;case"dependencies":t="";var i=r.params.depsCount;t+="sollte Attribut";if(i!=1){t+="e"}t+=" "+r.params.deps+" aufweisen, wenn Attribut "+r.params.property+" gesetzt ist";break;case"enum":t="sollte einem der vorgegebenen Werte entsprechen";break;case"exclusiveMaximum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"exclusiveMinimum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"false schema":t="boolsches Schema ist falsch";break;case"format":t='sollte diesem Format entsprechen: "'+r.params.format+'"';break;case"formatExclusiveMaximum":t="formatExclusiveMaximum sollte ein boolscher Wert sein";break;case"formatExclusiveMinimum":t="formatExclusiveMinimum sollte ein boolscher Wert sein";break;case"formatMaximum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"formatMinimum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"if":t='should match "'+r.params.failingKeyword+'" schema';break;case"maximum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"maxItems":t="";var i=r.params.limit;t+="sollte nicht mehr als "+i+" Element";if(i!=1){t+="e"}t+=" haben";break;case"maxLength":t="";var i=r.params.limit;t+="sollte nicht länger als "+i+" Zeichen sein";break;case"maxProperties":t="";var i=r.params.limit;t+="sollte nicht mehr als "+i+" Attribut";if(i!=1){t+="e"}t+=" haben";break;case"minimum":t="";var n=r.params.comparison+" "+r.params.limit;t+="sollte "+n+" sein";break;case"minItems":t="";var i=r.params.limit;t+="sollte nicht weniger als "+i+" Element";if(i!=1){t+="e"}t+=" haben";break;case"minLength":t="";var i=r.params.limit;t+="sollte nicht kürzer als "+i+" Zeichen sein";break;case"minProperties":t="";var i=r.params.limit;t+="sollte nicht weniger als "+i+" Attribut";if(i!=1){t+="e"}t+=" haben";break;case"multipleOf":t="sollte ein Vielfaches von "+r.params.multipleOf+" sein";break;case"not":t='sollte dem in "not" angegebenen Schema widersprechen';break;case"oneOf":t='sollte genau einem der Schemata in "oneOf" entsprechen';break;case"pattern":t='sollte diesem Muster entsprechen: "'+r.params.pattern+'"';break;case"patternRequired":t='sollte ein Attribut nach folgendem Muster haben "'+r.params.missingPattern+'"';break;case"propertyNames":t="Attributname '"+r.params.propertyName+"' ist ungültig";break;case"required":t="sollte das erforderliche Attribut "+r.params.missingProperty+" enthalten";break;case"switch":t='sollte der "switch" Validierung entsprechen, der Fall '+r.params.caseIndex+" schlägt fehl";break;case"type":t="sollte sein: "+r.params.type;break;case"uniqueItems":t="sollte keine Duplikate enthalten (Elemente #"+r.params.j+" und #"+r.params.i+" sind gleich)";break;default:continue}r.message=t}};